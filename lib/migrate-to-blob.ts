import fs from 'fs/promises'
import path from 'path'
import { saveArticlesToBlob, saveNewsletterSubscribersToBlob } from './blob-storage'

// Migrace ƒçl√°nk≈Ø z lok√°ln√≠ho JSON do Blob storage
export async function migrateArticlesToBlob(): Promise<void> {
  try {
    const articlesPath = path.join(process.cwd(), 'data', 'articles.json')
    
    // Zkus√≠me naƒç√≠st lok√°ln√≠ soubor
    try {
      const articlesData = await fs.readFile(articlesPath, 'utf-8')
      const articles = JSON.parse(articlesData)
      
      console.log(`Migrace ${articles.length} ƒçl√°nk≈Ø do Blob storage...`)
      await saveArticlesToBlob(articles)
      console.log('Migrace ƒçl√°nk≈Ø dokonƒçena!')
      
    } catch {
      console.log('Lok√°ln√≠ soubor articles.json neexistuje, vytv√°≈ô√≠me pr√°zdn√Ω blob...')
      await saveArticlesToBlob([])
    }
    
  } catch (error) {
    console.error('Chyba p≈ôi migraci ƒçl√°nk≈Ø:', error)
    throw error
  }
}

// Migrace newsletter subscribers z lok√°ln√≠ho JSON do Blob storage
export async function migrateNewsletterSubscribersToBlob(): Promise<void> {
  try {
    const subscribersPath = path.join(process.cwd(), 'data', 'newsletter-subscribers.json')
    
    try {
      const subscribersData = await fs.readFile(subscribersPath, 'utf-8')
      const subscribers = JSON.parse(subscribersData)
      
      console.log(`Migrace ${subscribers.length} newsletter subscribers do Blob storage...`)
      await saveNewsletterSubscribersToBlob(subscribers)
      console.log('Migrace newsletter subscribers dokonƒçena!')
      
    } catch {
      console.log('Lok√°ln√≠ soubor newsletter-subscribers.json neexistuje, vytv√°≈ô√≠me pr√°zdn√Ω blob...')
      await saveNewsletterSubscribersToBlob([])
    }
    
  } catch (error) {
    console.error('Chyba p≈ôi migraci newsletter subscribers:', error)
    throw error
  }
}

// Kompletn√≠ migrace v≈°ech dat
export async function migrateAllDataToBlob(): Promise<void> {
  console.log('üöÄ Zaƒç√≠n√° migrace dat do Vercel Blob storage...')
  
  try {
    await migrateArticlesToBlob()
    await migrateNewsletterSubscribersToBlob()
    
    console.log('‚úÖ Migrace v≈°ech dat dokonƒçena √∫spƒõ≈°nƒõ!')
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi migraci dat:', error)
    throw error
  }
}
